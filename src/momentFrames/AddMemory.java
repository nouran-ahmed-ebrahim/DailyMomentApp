
package momentFrames;

import TimeLine.PremiumTimeLine;
import moment.Memory;
import TimeLine.TimeLine;
import daily.moment.app.Validation;
import frams.HomePage;
import frams.MainFrame;
import frams.PremiumHome;

/**
 *
 * @author PC
 */
public class AddMemory extends MainFrame {

    /**
     * Creates new form AddMemory
     */
    private Memory memory;
    private TimeLine timeline;
    private int userIndex;
    public AddMemory(TimeLine t , int userIndex) {

        initComponents();
        timeline=t;
        this.userIndex =userIndex;
        unVisible();
    }

    private void unVisible(){
          jLabel9.setVisible(false);
        jLabel10.setVisible(false);
        jLabel11.setVisible(false);
        jLabel12.setVisible(false);
        jLabel13.setVisible(false);
        jLabel14.setVisible(false);
        jLabel16.setVisible(false);
        jLabel17.setVisible(false);
        jLabel18.setVisible(false);

        jLabel19.setVisible(false);
        jLabel20.setVisible(false);
        jLabel22.setVisible(false);
        jLabel23.setVisible(false);
        jLabel21.setVisible(false);
    }
    
    public void fillMemory() {

      
      String s1 =  name.getText();
      int nameRepeat =  timeline.countNumOfMomentWithSameName(s1);
      if(nameRepeat>0)
      {
          s1  = s1.concat(" "+(nameRepeat+1));
      }
        String s2 = description.getText();
        String s3 = location.getText();
        int i1 = Integer.parseInt(hPoints.getText());
        int i2 = Integer.parseInt(sPoints.getText());
        int i3 = Integer.parseInt(year.getText());
        int i4 = Integer.parseInt(rate.getText());
        Memory m = new Memory(s1, s2, i3, i4, i1, i2, s3);
        memory = m;

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        year = new javax.swing.JTextField();
        rate = new javax.swing.JTextField();
        location = new javax.swing.JTextField();
        hPoints = new javax.swing.JTextField();
        sPoints = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        description = new javax.swing.JTextArea();
        jLabel15 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        backIcon = new javax.swing.JLabel();
        background = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(757, 954));
        jPanel1.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Arial", 3, 17)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 0, 51));
        jLabel2.setText("Memory name");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(70, 230, 130, 30);
        jPanel1.add(name);
        name.setBounds(220, 220, 220, 40);
        jPanel1.add(year);
        year.setBounds(220, 290, 120, 40);

        rate.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.add(rate);
        rate.setBounds(220, 370, 70, 40);
        jPanel1.add(location);
        location.setBounds(220, 450, 230, 30);

        hPoints.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jPanel1.add(hPoints);
        hPoints.setBounds(230, 520, 70, 40);

        sPoints.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        sPoints.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sPointsActionPerformed(evt);
            }
        });
        jPanel1.add(sPoints);
        sPoints.setBounds(230, 600, 70, 50);

        jLabel3.setFont(new java.awt.Font("Arial", 1, 17)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 0, 51));
        jLabel3.setText("Actual year");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(70, 300, 110, 30);

        jLabel4.setFont(new java.awt.Font("Arial", 1, 17)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(153, 0, 51));
        jLabel4.setText("Importance Rate");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(70, 370, 140, 20);

        jLabel5.setFont(new java.awt.Font("Arial", 1, 17)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(153, 0, 51));
        jLabel5.setText("Location");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(70, 450, 90, 20);

        jLabel6.setFont(new java.awt.Font("Arial", 1, 17)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(153, 0, 51));
        jLabel6.setText("Happiness Points");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(70, 520, 152, 22);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(153, 0, 51));
        jLabel7.setText("Sadness Points");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(70, 600, 130, 50);

        jLabel8.setFont(new java.awt.Font("Segoe Script", 2, 36)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 102, 102));
        jLabel8.setText("Add  Memory");
        jPanel1.add(jLabel8);
        jLabel8.setBounds(160, 120, 300, 70);

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        description.setColumns(20);
        description.setFont(new java.awt.Font("Courier New", 0, 16)); // NOI18N
        description.setLineWrap(true);
        description.setRows(25);
        description.setWrapStyleWord(true);
        jScrollPane1.setViewportView(description);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(230, 690, 270, 170);

        jLabel15.setFont(new java.awt.Font("Arial", 1, 17)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(102, 0, 51));
        jLabel15.setText("Description");
        jPanel1.add(jLabel15);
        jLabel15.setBounds(70, 690, 120, 50);

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 102, 102));
        jButton1.setText("Add");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1);
        jButton1.setBounds(240, 920, 140, 50);

        jLabel9.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 0));
        jPanel1.add(jLabel9);
        jLabel9.setBounds(260, 270, 160, 0);

        jLabel10.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 0, 0));
        jLabel10.setText("This Field Can Not Be Empty");
        jPanel1.add(jLabel10);
        jLabel10.setBounds(250, 270, 170, 14);

        jLabel11.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 0, 0));
        jLabel11.setText("Please, Enter Correct Year");
        jPanel1.add(jLabel11);
        jLabel11.setBounds(260, 340, 250, 20);

        jLabel12.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 0, 0));
        jLabel12.setText("This Field Can Not Be Empty");
        jPanel1.add(jLabel12);
        jLabel12.setBounds(260, 340, 160, 14);

        jLabel13.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 0, 0));
        jLabel13.setText("This Field Can Not Be Empty");
        jPanel1.add(jLabel13);
        jLabel13.setBounds(250, 420, 180, 20);

        jLabel14.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 0, 0));
        jLabel14.setText("Please, Enter Number From 1 To 5");
        jPanel1.add(jLabel14);
        jLabel14.setBounds(250, 420, 200, 20);

        jLabel16.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(255, 0, 0));
        jLabel16.setText("Please, Enter Letters Only");
        jPanel1.add(jLabel16);
        jLabel16.setBounds(250, 490, 180, 20);

        jLabel17.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 0, 0));
        jLabel17.setText("This Field Can Not Be Empty");
        jPanel1.add(jLabel17);
        jLabel17.setBounds(250, 490, 170, 14);

        jLabel18.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 0, 0));
        jLabel18.setText("Please, Enter Number From 1 To 5");
        jPanel1.add(jLabel18);
        jLabel18.setBounds(250, 570, 220, 20);

        jLabel19.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 0, 0));
        jLabel19.setText("This Field Can Not Be Empty");
        jPanel1.add(jLabel19);
        jLabel19.setBounds(250, 570, 200, 20);

        jLabel20.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 0, 0));
        jLabel20.setText("Please, Enter Number From 1 To 5");
        jPanel1.add(jLabel20);
        jLabel20.setBounds(240, 660, 220, 20);

        jLabel21.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(255, 0, 0));
        jLabel21.setText("This Field Can Not Be Empty");
        jPanel1.add(jLabel21);
        jLabel21.setBounds(250, 660, 180, 30);

        jLabel22.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 0, 0));
        jLabel22.setText("Please, Enter Letters Only");
        jPanel1.add(jLabel22);
        jLabel22.setBounds(260, 880, 190, 20);

        jLabel23.setFont(new java.awt.Font("Tahoma", 3, 11)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(255, 0, 0));
        jLabel23.setText("This Field Can Not Be Empty");
        jPanel1.add(jLabel23);
        jLabel23.setBounds(270, 880, 170, 20);

        backIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/homeFram/Cancel Add.png"))); // NOI18N
        backIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backIconMouseClicked(evt);
            }
        });
        jPanel1.add(backIcon);
        backIcon.setBounds(520, 80, 116, 60);

        background.setIcon(new javax.swing.ImageIcon(getClass().getResource("/homeFram/Welpaper.jpg"))); // NOI18N
        background.setToolTipText("");
        jPanel1.add(background);
        background.setBounds(0, 0, 690, 1070);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 682, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 989, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
  private boolean Validatename = false;
  private boolean ValidateDescription = false;
  private boolean ValidateYear = false;
  private boolean ValidateRate = false;
  private boolean ValidateHPoints = false;
  private boolean ValidateSPoints = false;
  private boolean ValidateSPointsSpace = false;
  private boolean ValidateHPointsSpace = false;
  private boolean ValidateRateSpace = false;
  private boolean ValidateLocationSpace = false;
  private boolean ValidateYearSpace = false;
  private boolean ValidateDescriptionSpace = false;
  private boolean ValidateNameSpace = false;

    private void validationLettersName() {
        try {
            Validation.validationOnlyLetters(name.getText());
            jLabel9.setVisible(false);
               Validatename = true;
        } catch (Exception e) {
            jLabel9.setText(e.getMessage());
            jLabel9.setVisible(true);
            Validatename = false;
        }
    }


    private void validationNumbersYear() {

        try {
            Validation.ValidateYear(year.getText());
            Validation.ValidateActualYears(year.getText());

            jLabel11.setVisible(false);
            ValidateYear = true;

        } catch (Exception e) {
            jLabel11.setText(e.getMessage());
            jLabel11.setVisible(true);
            ValidateYear = false;
        }
    }

    private void validationNumbersHPoints() {
        try {
            Validation.validationPoints(hPoints.getText());
            jLabel18.setVisible(false);
            ValidateHPoints = true;

        } catch (Exception e) {
            jLabel18.setText(e.getMessage());
            jLabel18.setVisible(true);
            ValidateHPoints = false;
        }
      
    }

    private void validationNumbersSPoints() {
        try {
            Validation.validationPoints(sPoints.getText());
            jLabel20.setVisible(false);
            ValidateSPoints = true;

        } catch (Exception e) {
            jLabel20.setText(e.getMessage());

            jLabel20.setVisible(true);
            ValidateSPoints = false;
        }
    }

   private void validationNumbersRate() {
        try {
            Validation.validationPoints(rate.getText());
            jLabel14.setVisible(false);
            ValidateRate = true;

        } catch (Exception e) {
            jLabel14.setText(e.getMessage());

            jLabel14.setVisible(true);
            ValidateRate = false;
        }
    }

   private void validationSpacesName() {

        try {
            Validation.validationSpace(name.getText());
            jLabel10.setVisible(false);
            ValidateNameSpace = true;
        } catch (Exception e) {
            jLabel10.setText(e.getMessage());
            jLabel10.setVisible(true);
            jLabel9.setVisible(false);
            ValidateNameSpace = false;
        }
    }

    private void validationSpacesLocation() {
        try {
            Validation.validationSpace(location.getText());
            jLabel17.setVisible(false);
            ValidateLocationSpace = true;

        } catch (Exception e) {
            jLabel17.setText(e.getMessage());

            jLabel17.setVisible(true);
            jLabel16.setVisible(false);
            ValidateLocationSpace = false;
        }
    }

   private void validationSpacesHPoints() {
        try {
            Validation.validationSpace(hPoints.getText());
            jLabel19.setVisible(false);
            ValidateHPointsSpace = true;

        } catch (Exception e) {
            jLabel19.setText(e.getMessage());

            jLabel19.setVisible(true);
            jLabel18.setVisible(false);
            ValidateHPointsSpace = false;
        }
    }

  private void validationSpacesSPoints() {
        try {
            Validation.validationSpace(sPoints.getText());
            jLabel21.setVisible(false);
            ValidateSPointsSpace = true;

        } catch (Exception e) {
            jLabel21.setText(e.getMessage());

            jLabel21.setVisible(true);
            jLabel20.setVisible(false);
            ValidateSPointsSpace = false;
        }
    }

   private void validationSpacesRate() {
        try {
            Validation.validationSpace(rate.getText());

            jLabel13.setVisible(false);
            ValidateRateSpace = true;

        } catch (Exception e) {
            jLabel13.setText(e.getMessage());

            jLabel13.setVisible(true);
            jLabel14.setVisible(false);
            ValidateRateSpace = false;
        }
       
    }

    private void validationSpacesDescription() {
        try {
            Validation.validationSpace(description.getText());
            jLabel23.setVisible(false);
            ValidateDescriptionSpace = true;

        } catch (Exception e) {
            jLabel23.setText(e.getMessage());

            jLabel23.setVisible(true);
            jLabel22.setVisible(false);
            ValidateDescriptionSpace = false;
        }
          }

    private void validationSpacesYear() {
        try {
            Validation.validationSpace(year.getText());
            jLabel12.setVisible(false);
            ValidateYearSpace = true;

        } catch (Exception e) {
            jLabel12.setText(e.getMessage());

            jLabel12.setVisible(true);
            jLabel11.setVisible(false);
            ValidateYearSpace = false;

        }
       
    }

  
          
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
   
        validationLettersName();
        validationNumbersHPoints();
        validationNumbersRate();
        validationNumbersSPoints();
        validationNumbersYear();
        validationSpacesName();
        validationSpacesRate();
        validationSpacesLocation();
        validationSpacesHPoints();
        validationSpacesSPoints();
        validationSpacesYear();
        validationSpacesDescription();
        
        if (Validatename == true  && ValidateYear == true && ValidateRate == true
                && ValidateHPoints == true && ValidateSPoints == true
                && ValidateSPointsSpace == true && ValidateHPointsSpace == true && ValidateRateSpace == true 
                && ValidateLocationSpace == true &&ValidateYearSpace == true && ValidateDescriptionSpace == true && ValidateNameSpace == true) 
            {
            fillMemory();
             timeline.addMoment(memory); 
             this.setVisible(false);
             if (timeline instanceof PremiumTimeLine)
                {
                    new PremiumHome(userIndex).setVisible(true);
                }
                else
                {
                    new HomePage(userIndex).setVisible(true);
                }
            }                                 
                                                          
           
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void sPointsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sPointsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_sPointsActionPerformed

    private void backIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backIconMouseClicked
        
        this.setVisible(false);
        if (timeline instanceof PremiumTimeLine)
                {
                    new PremiumHome(userIndex).setVisible(true);
                }
                else
                {
                    new HomePage(userIndex).setVisible(true);
                }
    }//GEN-LAST:event_backIconMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel backIcon;
    private javax.swing.JLabel background;
    private javax.swing.JTextArea description;
    private javax.swing.JTextField hPoints;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField location;
    private javax.swing.JTextField name;
    private javax.swing.JTextField rate;
    private javax.swing.JTextField sPoints;
    private javax.swing.JTextField year;
    // End of variables declaration//GEN-END:variables
}
